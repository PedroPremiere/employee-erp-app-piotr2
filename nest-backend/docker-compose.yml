version: '3'
services:
    db:
        image: mysql:latest
        container_name: ${COMPOSE_PROJECT_NAME}.mysql.docker
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: ${DATABASE_USERNAME}
            MYSQL_PASSWORD: ${DATABASE_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
        ports:
            - 127.0.0.1:${DATABASE_PORT}:3306
        volumes:
            - ~/data/mysql.${COMPOSE_PROJECT_NAME}.docker:/var/lib/mysql
        networks:
            - global

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: ${COMPOSE_PROJECT_NAME}.rabbitmq.docker
        restart: unless-stopped
        volumes:
            - rabbit.data:/data
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
        ports:
            - 127.0.0.1:${RABBITMQ_PORT}:5672
            - 127.0.0.1:${RABBITMQ_MANAGEMENT_PORT}:15672
        networks:
            - global


    mongodb:
        image: "mongo:latest"
        volumes:
            - "mongodb_data:/data/db"
        restart: "on-failure"


    opensearch:
        image: "opensearchproject/opensearch:2.4.0"
        environment:
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
            - "bootstrap.memory_lock=true"
            - "discovery.type=single-node"
            - "action.auto_create_index=false"
            - "plugins.security.ssl.http.enabled=false"
            - "plugins.security.disabled=true"
        ulimits:
            memlock:
                hard: -1
                soft: -1
            nofile:
                soft: 65536
                hard: 65536
        volumes:
            - "os_data:/usr/share/opensearch/data"
        restart: "on-failure"


    graylog:
        hostname: "server"
        image: "${GRAYLOG_IMAGE:-graylog/graylog:5.0}"
        depends_on:
            opensearch:
                condition: "service_started"
            mongodb:
                condition: "service_started"
        entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
        environment:
            GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
            GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
            GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}"
            GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
            GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
            GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
            GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
        ports:
            - "5044:5044/tcp"   # Beats
            - "5140:5140/udp"   # Syslog
            - "5140:5140/tcp"   # Syslog
            - "5555:5555/tcp"   # RAW TCP
            - "5555:5555/udp"   # RAW TCP
            - "9000:9000/tcp"   # Server API
            - "12201:12201/tcp" # GELF TCP
            - "12201:12201/udp" # GELF UDP
            #- "10000:10000/tcp" # Custom TCP port
            #- "10000:10000/udp" # Custom UDP port
            - "13301:13301/tcp" # Forwarder data
            - "13302:13302/tcp" # Forwarder config
        volumes:
            - "graylog_data:/usr/share/graylog/data/data"
            - "graylog_journal:/usr/share/graylog/data/journal"
        restart: "on-failure"



volumes:
    rabbit.data:
    mongodb_data:
    os_data:
    graylog_data:
    graylog_journal:

networks:
    global:
        external: true
