# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""contract """
type ContractDto {
  """Creation date of item"""
  createdAt: DateTime!

  """End date of contract"""
  endDate: DateTime!

  """ID of item in Database as UUID"""
  id: String!

  """User Id of owner"""
  ownerId: String!

  """Name of position"""
  position: String!

  """Start date of contract"""
  startDate: DateTime!

  """Last update date of item"""
  updatedAt: DateTime!

  """User Id of owner"""
  user: UserDto!

  """Number of days employee can use"""
  vacationDays: Int!

  """Number of days per year"""
  vacationDaysPerYear: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Message"""
type MessageDto {
  """message text"""
  message: String!
}

type Mutation {
  addUserToRole(roleIds: [String!], userIds: [String!]): MessageDto!
  deleteContract(id: String!): MessageDto!
  deleteRole(id: String!): MessageDto!
  deleteUser(id: String!): MessageDto!
  removeUserFromRole(roleIds: [String!], userIds: [String!]): MessageDto!
  storeContract(endDate: String, ownerId: String, position: String, startDate: String, vacationDaysPerYear: Int): ContractDto!
  storeRole(name: String): RoleDto!
  storeUser(email: String, password: String, passwordRepeat: String): UserDto!
  updateContract(
    endDate: String

    """ID of item in Database as UUID"""
    id: String
    ownerId: String
    position: String
    startDate: String
    vacationDaysPerYear: Int
  ): ContractDto!
  updateRole(
    """ID of item in Database as UUID"""
    id: String
    name: String
  ): RoleDto!
  updateUser(
    email: String

    """ID of item in Database as UUID"""
    id: String
  ): UserDto!
}

type Query {
  contract(id: String!): ContractDto!
  listContracts(orderBy: String, orderDirection: String, page: Int = 1, perPage: Int = 10): [ContractDto!]!
  listRoles(orderBy: String, orderDirection: String, page: Int = 1, perPage: Int = 10): [RoleDto!]!
  listUsers(orderBy: String, orderDirection: String, page: Int = 1, perPage: Int = 10): [UserDto!]!
  me: UserDto!
  role(id: String!): RoleDto!
  user(id: String!): UserDto!
}

"""Role """
type RoleDto {
  """Creation date of item"""
  createdAt: DateTime!

  """ID of item in Database as UUID"""
  id: String!

  """Name of item"""
  name: String!

  """Last update date of item"""
  updatedAt: DateTime!

  """User Ids of owners"""
  users: [UserDto!]!
}

"""user """
type UserDto {
  """User Contracts"""
  contracts: [ContractDto!]

  """Creation date of item"""
  createdAt: DateTime!

  """User Email"""
  email: String!

  """ID of item in Database as UUID"""
  id: String!

  """Last update date of item"""
  updatedAt: DateTime!
}